


 게시판 페이징 기능 구현 이란?
 
 게시판 만들기 프로젝트의 마지막 단계 입니다.
 
 어떤 게시판이든 목록의 글이 많아지면 한 페이지에 모든 글이 표시되는 것이 아니라
 
 [1], [2], [3] ..... 이렇게 페이지별로 표시 됩니다.
 
 
 게시판에 페이징 기능 적용
 
 글번호			작성자			제목				작성일
 1				 hong			상품평				2018.9.18
 2				 hong			상품평가				2018.9.18
 3				 hong			상품주문이 늦어요		2018.9.18
 4				 lee				[답변]죄송합니다.	2018.9.18
 5				 hong			상품평입니다.			2018.9.18
 6				 hong			최길동 글입니다.		2018.9.18
 7				 hong			최길동 글입니다.		2018.9.18
 8				 hong			최길동 글입니다.		2018.9.18
 9				 hong			안녕하세요.			2018.9.18
 10				 lee				[답변]안녕 못함.	2018.9.18
 
 		//한 섹션은 페이지 10개로 이루어 집니다.
		[1]  [2]  [3] [4] [5] [6] [7] [8] [9] [10]  next
		
 설명: 여기서 하단에 보이는 숫자[1]...들은 페이지 번호 입니다.
          한페이지 마다 10개의 글이 표시되고, 이페이지 10개가 모여 한 개의 섹션(section)이 됩니다.
          섹션 하나는 첫 번재 페이지 부터 열 번째 페이지까지 입니다.
      
          두번째 섹션은 열한 번째 페이지부터 스무번째 페이지 까지 입니다.
          따라서 사용자가 글 목록 페이지에서 [2]를 클릭하면 
          브라우저에서는 서버에 section값으로 1을, pageNum값으로는 2를 전송하는 것 입니다.
          그리고 글목록에는 두번째 페이지에 해당 하는 글인 11에서 20번째 글을 t_board테이블에서 조회한후 표시 합니다.
           
 
 페이징 기능을 추가한 글 목록 조회 SQL문!!!!(section과 pageNum으로 글목록 조회하는 SQL문!!!!)
 
  SELECT * FROM (
  					SELECT ROWNUM  as recNum,
  						   LVL,
  						   articleNO,
  						   parentNO,
  						   title,
  						   content,
  						   id,
  						   writedate
  					FROM (
  							
  							SELECT LEVEL as LVL,
  								   articleNO,
  								   parentNO,
  								   title,
  								   content,
  								   id,
  								   writedate
  							FROM t_board
  							START WITH partentNO=0
  							CONNECT BY PRIOR articleNO=parentNO
  							ORDER SLBINGS BY articleNO DESC
  						 )) 
	WHERE
	recNUM between(section-1)*100+(pageNum-1)*10+1 and (section-1)*100+pageNum*10;		 
--  recNUM between                       1         and                10;  				
 
설명: 페이징 기능을 구현하기 위해 서브쿼리문과 오라클에서 제공하는 가상 컬럼인 ROWNUM을 이용합니다.
	 ROWNUM은 select문으로 조회된 레코드 목록에 대해 오라클 자체에서 순서를 부여하여 레코드 번호를 순서대로  할당 해 줍니다.
	 
	 위 서브쿼리 문의 실행 순서
	 
	 1. 기존 계층형 구조로 글목록을 일단 조회합니다.
	 
	 2. 그결과에 대해 다시 ROWNUM(recNum)이 표시되도록 서브쿼리문을 이용해 다시 한번 조회 합니다.
	 
	 3. ROWNUM이 표시 된 두 번째 결과에서 section과 pageNum으로 계산된 where절의 between연산자 사이의 값에 해당하는 
	 	ROWNUM이 있는 레코드들만 최종적으로 조회합니다.
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
     
     
     
     